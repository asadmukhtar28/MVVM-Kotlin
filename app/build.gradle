plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.asad.contactsdirectory"
        minSdkVersion minVersion
        targetSdkVersion targetVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }
    productFlavors {
        stagging {
//            buildConfigField("String", "BaseApiUrl", StaggingBaseApiUrl)
        }
        production {
//            buildConfigField("String", "BaseApiUrl", ProductionBaseApiUrl)
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialLibVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    /* extensions */
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleExtVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataKtxVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelKtxVersion"


    /* retrofit */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutinesVersion"

    /* glide */
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:$glideCompilerVersion"

    /* coroutines */
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"


    // daggerHilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltCompiler"

    // parser
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitGsonConverterVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    /* Activity, Fragment ktx */
    implementation "androidx.activity:activity-ktx:$ktxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    //Room
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-testing:$roomVersion"

}